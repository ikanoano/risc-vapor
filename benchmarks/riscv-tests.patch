diff --git a/benchmarks/Makefile b/benchmarks/Makefile
index fb0d297..bb204ce 100644
--- a/benchmarks/Makefile
+++ b/benchmarks/Makefile
@@ -4,7 +4,7 @@
 # Yunsup Lee (yunsup@cs.berkeley.edu)
 #
 
-XLEN ?= 64
+XLEN ?= 32
 
 default: all
 
@@ -24,12 +24,12 @@ bmarks = \
 	towers \
 	vvadd \
 	multiply \
-	mm \
 	dhrystone \
 	spmv \
-	mt-vvadd \
-	mt-matmul \
-	pmp \
+#	pmp \
+#	mm \
+#	mt-vvadd \
+#	mt-matmul \
 
 #--------------------------------------------------------------------
 # Build rules
@@ -37,9 +37,9 @@ bmarks = \
 
 RISCV_PREFIX ?= riscv$(XLEN)-unknown-elf-
 RISCV_GCC ?= $(RISCV_PREFIX)gcc
-RISCV_GCC_OPTS ?= -DPREALLOCATE=1 -mcmodel=medany -static -std=gnu99 -O2 -ffast-math -fno-common -fno-builtin-printf
+RISCV_GCC_OPTS ?= -DPREALLOCATE=1 -mcmodel=medany -static -std=gnu99 -O2 -ffast-math -fno-common -fno-builtin-printf -march=rv32i -mabi=ilp32
 RISCV_LINK ?= $(RISCV_GCC) -T $(src_dir)/common/test.ld $(incs)
-RISCV_LINK_OPTS ?= -static -nostdlib -nostartfiles -lm -lgcc -T $(src_dir)/common/test.ld
+RISCV_LINK_OPTS ?= -static -nostdlib -nostartfiles -lm -lgcc -T $(src_dir)/common/test.ld -march=rv32i -mabi=ilp32
 RISCV_OBJDUMP ?= $(RISCV_PREFIX)objdump --disassemble-all --disassemble-zeroes --section=.text --section=.text.startup --section=.data
 RISCV_SIM ?= spike --isa=rv$(XLEN)gc
 
diff --git a/benchmarks/common/crt.S b/benchmarks/common/crt.S
index d75e81e..58472cb 100644
--- a/benchmarks/common/crt.S
+++ b/benchmarks/common/crt.S
@@ -133,7 +133,14 @@ _start:
   sll sp, sp, STKSHIFT
   add sp, sp, tp
 
-  j _init
+  jal ra, _init
+
+  # halt
+  nop
+  lui a5,   0xf0000
+  sw  a0,   0(a5)
+  nop
+  nop
 
   .align 2
 trap_entry:
diff --git a/benchmarks/common/syscalls.c b/benchmarks/common/syscalls.c
index 0a7d6b7..4adb551 100644
--- a/benchmarks/common/syscalls.c
+++ b/benchmarks/common/syscalls.c
@@ -3,7 +3,7 @@
 #include <stdint.h>
 #include <string.h>
 #include <stdarg.h>
-#include <stdio.h>
+//#include <stdio.h>
 #include <limits.h>
 #include <sys/signal.h>
 #include "util.h"
@@ -14,9 +14,16 @@
 
 extern volatile uint64_t tohost;
 extern volatile uint64_t fromhost;
+int sprintf(char* str, const char* fmt, ...);
 
-static uintptr_t syscall(uintptr_t which, uint64_t arg0, uint64_t arg1, uint64_t arg2)
+static void syscall(uintptr_t which, uint64_t arg0, uint64_t arg1, uint64_t arg2)
 {
+  char *ptr = (char*)arg1;
+  for(int i=0; i<arg2; i++) {
+    tohost = *ptr++;
+    while(!tohost);
+  }
+  /*
   volatile uint64_t magic_mem[8] __attribute__((aligned(64)));
   magic_mem[0] = which;
   magic_mem[1] = arg0;
@@ -31,6 +38,7 @@ static uintptr_t syscall(uintptr_t which, uint64_t arg0, uint64_t arg1, uint64_t
 
   __sync_synchronize();
   return magic_mem[0];
+  */
 }
 
 #define NUM_COUNTERS 2
@@ -81,9 +89,11 @@ void printstr(const char* s)
 
 void __attribute__((weak)) thread_entry(int cid, int nc)
 {
+  /*
   // multi-threaded programs override this function.
   // for the case of single-threaded programs, only let core 0 proceed.
   while (cid != 0);
+  */
 }
 
 int __attribute__((weak)) main(int argc, char** argv)
@@ -93,8 +103,16 @@ int __attribute__((weak)) main(int argc, char** argv)
   return -1;
 }
 
+static void init_bss()
+{
+  extern char __bss_start, __bss_end;
+  size_t bss_size = &__bss_end - &__bss_start;
+  memset(&__bss_start, 0, bss_size);
+}
+
 static void init_tls()
 {
+  /*
   register void* thread_pointer asm("tp");
   extern char _tls_data;
   extern __thread char _tdata_begin, _tdata_end, _tbss_end;
@@ -102,11 +120,13 @@ static void init_tls()
   memcpy(thread_pointer, &_tls_data, tdata_size);
   size_t tbss_size = &_tbss_end - &_tdata_end;
   memset(thread_pointer + tdata_size, 0, tbss_size);
+  */
 }
 
-void _init(int cid, int nc)
+int _init(int cid, int nc)
 {
   init_tls();
+  init_bss();
   thread_entry(cid, nc);
 
   // only single-threaded programs should ever get here.
@@ -120,14 +140,14 @@ void _init(int cid, int nc)
   if (pbuf != buf)
     printstr(buf);
 
-  exit(ret);
+  return ret;
 }
 
 #undef putchar
 int putchar(int ch)
 {
-  static __thread char buf[64] __attribute__((aligned(64)));
-  static __thread int buflen = 0;
+  static char buf[64] __attribute__((aligned(64)));
+  static int buflen = 0;
 
   buf[buflen++] = ch;
 
diff --git a/benchmarks/common/test.ld b/benchmarks/common/test.ld
index 4f8892e..826a8ab 100644
--- a/benchmarks/common/test.ld
+++ b/benchmarks/common/test.ld
@@ -22,11 +22,10 @@ SECTIONS
 {
 
   /* text: test code section */
-  . = 0x80000000;
+  . = 0x00000000;
   .text.init : { *(.text.init) }
 
   . = ALIGN(0x1000);
-  .tohost : { *(.tohost) }
 
   .text : { *(.text) }
 
@@ -40,11 +39,13 @@ SECTIONS
   }
 
   /* bss segment */
+  __bss_start = .;
   .sbss : {
     *(.sbss .sbss.* .gnu.linkonce.sb.*)
     *(.scommon)
   }
   .bss : { *(.bss) }
+  __bss_end = .;
 
   /* thread-local data segment */
   .tdata :
@@ -59,8 +60,13 @@ SECTIONS
     *(.tbss)
     *(.tbss.end)
   }
-
   /* End of uninitalized data segement */
   _end = .;
+
+  . = ALIGN(0x0100);
+  . = 0xf0000100;
+  .tohost : { *(.tohost) }
+  . = 0xf0000200;
+  .fromhost : { *(.fromhost) }
 }
 
diff --git a/benchmarks/dhrystone/dhrystone.c b/benchmarks/dhrystone/dhrystone.c
index 38e3376..418602a 100644
--- a/benchmarks/dhrystone/dhrystone.c
+++ b/benchmarks/dhrystone/dhrystone.c
@@ -180,6 +180,3 @@ Enumeration Enum_Par_Val;
     return (false);
 } /* Func_3 */
 
-void debug_printf(const char* str, ...)
-{
-}
diff --git a/benchmarks/dhrystone/dhrystone_main.c b/benchmarks/dhrystone/dhrystone_main.c
index 9c7bcf5..efcf03e 100644
--- a/benchmarks/dhrystone/dhrystone_main.c
+++ b/benchmarks/dhrystone/dhrystone_main.c
@@ -11,7 +11,7 @@
 
 #include "dhrystone.h"
 
-void debug_printf(const char* str, ...);
+#define debug_printf printf
 
 #include "util.h"
 
